/*
 * Action Service
 *
 * This API is intended to manage custom executions (previously known as
 * actions) in a ZITADEL instance. This service is in beta state. It can AND
 * will continue breaking until a stable version is released.
 *
 * OpenAPI spec version: 2.0-beta
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct V2betaInTargetIdsFilter {
	/// the ids of the targets to include
	#[serde(rename = "targetIds")]
	target_ids: Option<Vec<String>>,
}

impl V2betaInTargetIdsFilter {
	pub fn new() -> V2betaInTargetIdsFilter {
		V2betaInTargetIdsFilter { target_ids: None }
	}

	pub fn set_target_ids(&mut self, target_ids: Vec<String>) {
		self.target_ids = Some(target_ids);
	}

	pub fn with_target_ids(mut self, target_ids: Vec<String>) -> V2betaInTargetIdsFilter {
		self.target_ids = Some(target_ids);
		self
	}

	pub fn target_ids(&self) -> Option<&Vec<String>> {
		self.target_ids.as_ref()
	}

	pub fn reset_target_ids(&mut self) {
		self.target_ids = None;
	}
}
