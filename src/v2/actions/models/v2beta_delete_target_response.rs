// SPDX-FileCopyrightText: 2025 Famedly GmbH (info@famedly.com)
//
// SPDX-License-Identifier: Apache-2.0

/*
 * Action Service
 *
 * This API is intended to manage custom executions (previously known as
 * actions) in a ZITADEL instance. This service is in beta state. It can AND
 * will continue breaking until a stable version is released.
 *
 * OpenAPI spec version: 2.0-beta
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct V2betaDeleteTargetResponse {
	/// The timestamp of the deletion of the target. Note that the deletion date
	/// is only guaranteed to be set if the deletion was successful during the
	/// request. In case the deletion occurred in a previous request, the
	/// deletion date might be empty.
	#[serde(rename = "deletionDate")]
	deletion_date: Option<String>,
}

impl V2betaDeleteTargetResponse {
	pub fn new() -> V2betaDeleteTargetResponse {
		V2betaDeleteTargetResponse { deletion_date: None }
	}

	pub fn set_deletion_date(&mut self, deletion_date: String) {
		self.deletion_date = Some(deletion_date);
	}

	pub fn with_deletion_date(mut self, deletion_date: String) -> V2betaDeleteTargetResponse {
		self.deletion_date = Some(deletion_date);
		self
	}

	pub fn deletion_date(&self) -> Option<&String> {
		self.deletion_date.as_ref()
	}

	pub fn reset_deletion_date(&mut self) {
		self.deletion_date = None;
	}
}
