// SPDX-FileCopyrightText: 2025 Famedly GmbH (info@famedly.com)
//
// SPDX-License-Identifier: Apache-2.0

/*
 * Action Service
 *
 * This API is intended to manage custom executions (previously known as
 * actions) in a ZITADEL instance. This service is in beta state. It can AND
 * will continue breaking until a stable version is released.
 *
 * OpenAPI spec version: 2.0-beta
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct V2betaListExecutionFunctionsResponse {
	#[serde(rename = "functions")]
	functions: Option<Vec<String>>,
}

impl V2betaListExecutionFunctionsResponse {
	pub fn new() -> V2betaListExecutionFunctionsResponse {
		V2betaListExecutionFunctionsResponse { functions: None }
	}

	pub fn set_functions(&mut self, functions: Vec<String>) {
		self.functions = Some(functions);
	}

	pub fn with_functions(
		mut self,
		functions: Vec<String>,
	) -> V2betaListExecutionFunctionsResponse {
		self.functions = Some(functions);
		self
	}

	pub fn functions(&self) -> Option<&Vec<String>> {
		self.functions.as_ref()
	}

	pub fn reset_functions(&mut self) {
		self.functions = None;
	}
}
