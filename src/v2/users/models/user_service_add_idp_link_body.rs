/*
 * User Service
 *
 * This API is intended to manage users in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};

use crate::v2::users::models;

#[derive(Debug, Serialize, Deserialize, Default)]
pub struct UserServiceAddIdpLinkBody {
	#[serde(rename = "idpLink")]
	idp_link: Option<models::IdpLink>,
}

impl UserServiceAddIdpLinkBody {
	pub fn new() -> UserServiceAddIdpLinkBody {
		UserServiceAddIdpLinkBody { idp_link: None }
	}

	pub fn set_idp_link(&mut self, idp_link: models::IdpLink) {
		self.idp_link = Some(idp_link);
	}

	pub fn with_idp_link(mut self, idp_link: models::IdpLink) -> UserServiceAddIdpLinkBody {
		self.idp_link = Some(idp_link);
		self
	}

	pub fn idp_link(&self) -> Option<&models::IdpLink> {
		self.idp_link.as_ref()
	}

	pub fn reset_idp_link(&mut self) {
		self.idp_link = None;
	}
}
