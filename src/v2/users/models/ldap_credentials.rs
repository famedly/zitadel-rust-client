/*
 * User Service
 *
 * This API is intended to manage users in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};

#[derive(Debug, Serialize, Deserialize, Default, Clone)]
pub struct LdapCredentials {
	/// Username used to login through LDAP
	#[serde(rename = "username")]
	username: Option<String>,
	/// Password used to login through LDAP
	#[serde(rename = "password")]
	password: Option<String>,
}

impl LdapCredentials {
	pub fn new() -> LdapCredentials {
		LdapCredentials { username: None, password: None }
	}

	pub fn set_username(&mut self, username: String) {
		self.username = Some(username);
	}

	pub fn with_username(mut self, username: String) -> LdapCredentials {
		self.username = Some(username);
		self
	}

	pub fn username(&self) -> Option<&String> {
		self.username.as_ref()
	}

	pub fn reset_username(&mut self) {
		self.username = None;
	}

	pub fn set_password(&mut self, password: String) {
		self.password = Some(password);
	}

	pub fn with_password(mut self, password: String) -> LdapCredentials {
		self.password = Some(password);
		self
	}

	pub fn password(&self) -> Option<&String> {
		self.password.as_ref()
	}

	pub fn reset_password(&mut self) {
		self.password = None;
	}
}
