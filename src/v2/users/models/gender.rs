// SPDX-FileCopyrightText: 2025 Famedly GmbH (info@famedly.com)
//
// SPDX-License-Identifier: Apache-2.0

/*
 * User Service
 *
 * This API is intended to manage users in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Gender {
	#[serde(rename = "GENDER_UNSPECIFIED")]
	Unspecified,
	#[serde(rename = "GENDER_FEMALE")]
	Female,
	#[serde(rename = "GENDER_MALE")]
	Male,
	#[serde(rename = "GENDER_DIVERSE")]
	Diverse,
}

impl std::fmt::Display for Gender {
	fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
		match self {
			Self::Unspecified => write!(f, "GENDER_UNSPECIFIED"),
			Self::Female => write!(f, "GENDER_FEMALE"),
			Self::Male => write!(f, "GENDER_MALE"),
			Self::Diverse => write!(f, "GENDER_DIVERSE"),
		}
	}
}

impl Default for Gender {
	fn default() -> Gender {
		Self::Unspecified
	}
}
