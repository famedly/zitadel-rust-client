/*
 * User Service
 *
 * This API is intended to manage users in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};

use crate::v2::users::models;

#[derive(Debug, Serialize, Deserialize, Default, Clone)]
pub struct OrQuery {
	/// the sub queries to 'OR'
	#[serde(rename = "queries")]
	queries: Option<Vec<models::SearchQuery>>,
}

impl OrQuery {
	/// Connect multiple sub-condition with and OR operator.
	pub fn new() -> OrQuery {
		OrQuery { queries: None }
	}

	pub fn set_queries(&mut self, queries: Vec<models::SearchQuery>) {
		self.queries = Some(queries);
	}

	pub fn with_queries(mut self, queries: Vec<models::SearchQuery>) -> OrQuery {
		self.queries = Some(queries);
		self
	}

	pub fn queries(&self) -> Option<&Vec<models::SearchQuery>> {
		self.queries.as_ref()
	}

	pub fn reset_queries(&mut self) {
		self.queries = None;
	}
}
