/*
 * User Service
 *
 * This API is intended to manage users in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct UserServiceVerifyU2FRegistrationBody {
	/// PublicKeyCredential Interface. Generated helper methods populate the field from JSON created by a WebauthN client. See also:  https://www.w3.org/TR/webauthn/#publickeycredential
	#[serde(rename = "publicKeyCredential")]
	public_key_credential: Value,
	#[serde(rename = "tokenName")]
	token_name: String,
}

impl UserServiceVerifyU2FRegistrationBody {
	pub fn new(
		public_key_credential: Value,
		token_name: String,
	) -> UserServiceVerifyU2FRegistrationBody {
		UserServiceVerifyU2FRegistrationBody { public_key_credential, token_name }
	}

	pub fn set_public_key_credential(&mut self, public_key_credential: Value) {
		self.public_key_credential = public_key_credential;
	}

	pub fn with_public_key_credential(
		mut self,
		public_key_credential: Value,
	) -> UserServiceVerifyU2FRegistrationBody {
		self.public_key_credential = public_key_credential;
		self
	}

	pub fn public_key_credential(&self) -> &Value {
		&self.public_key_credential
	}

	pub fn set_token_name(&mut self, token_name: String) {
		self.token_name = token_name;
	}

	pub fn with_token_name(mut self, token_name: String) -> UserServiceVerifyU2FRegistrationBody {
		self.token_name = token_name;
		self
	}

	pub fn token_name(&self) -> &String {
		&self.token_name
	}
}
