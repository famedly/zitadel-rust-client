/*
 * Organization Service
 *
 * This API is intended to manage organizations in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::organization::models;

#[derive(Debug, Serialize, Deserialize)]
pub struct V2OrganizationIdQuery {
	/// Unique identifier of the organization.
	#[serde(rename = "id")]
	id: String,
}

impl V2OrganizationIdQuery {
	pub fn new(id: String) -> V2OrganizationIdQuery {
		V2OrganizationIdQuery { id: id }
	}

	pub fn set_id(&mut self, id: String) {
		self.id = id;
	}

	pub fn with_id(mut self, id: String) -> V2OrganizationIdQuery {
		self.id = id;
		self
	}

	pub fn id(&self) -> &String {
		&self.id
	}
}
