// SPDX-FileCopyrightText: 2025 Famedly GmbH (info@famedly.com)
//
// SPDX-License-Identifier: Apache-2.0

/*
 * Organization Service
 *
 * This API is intended to manage organizations in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::organization::models;

#[derive(Debug, Serialize, Deserialize)]
pub struct V2OrganizationStateQuery {
	/// Current state of the organization.
	#[serde(rename = "state")]
	state: Option<models::V2OrganizationState>,
}

impl V2OrganizationStateQuery {
	pub fn new() -> V2OrganizationStateQuery {
		V2OrganizationStateQuery { state: None }
	}

	pub fn set_state(&mut self, state: models::V2OrganizationState) {
		self.state = Some(state);
	}

	pub fn with_state(mut self, state: models::V2OrganizationState) -> V2OrganizationStateQuery {
		self.state = Some(state);
		self
	}

	pub fn state(&self) -> Option<&models::V2OrganizationState> {
		self.state.as_ref()
	}

	pub fn reset_state(&mut self) {
		self.state = None;
	}
}
