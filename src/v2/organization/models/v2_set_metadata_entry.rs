/*
 * Organization Service
 *
 * This API is intended to manage organizations in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::organization::models;

#[derive(Debug, Serialize, Deserialize)]
pub struct V2SetMetadataEntry {
	#[serde(rename = "key")]
	key: String,
	/// The value has to be base64 encoded.
	#[serde(rename = "value")]
	value: String,
}

impl V2SetMetadataEntry {
	pub fn new(key: String, value: String) -> V2SetMetadataEntry {
		V2SetMetadataEntry { key: key, value: value }
	}

	pub fn set_key(&mut self, key: String) {
		self.key = key;
	}

	pub fn with_key(mut self, key: String) -> V2SetMetadataEntry {
		self.key = key;
		self
	}

	pub fn key(&self) -> &String {
		&self.key
	}

	pub fn set_value(&mut self, value: String) {
		self.value = value;
	}

	pub fn with_value(mut self, value: String) -> V2SetMetadataEntry {
		self.value = value;
		self
	}

	pub fn value(&self) -> &String {
		&self.value
	}
}
