/* 
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;
use crate::v2::management::models;
use serde::{Serialize, Deserialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct V1ListFlowTypesResponse {
  #[serde(rename = "result")]
  result: Option<Vec<models::Zitadelactionv1FlowType>>
}

impl V1ListFlowTypesResponse {
  pub fn new() -> V1ListFlowTypesResponse {
    V1ListFlowTypesResponse {
      result: None
    }
  }

  pub fn set_result(&mut self, result: Vec<models::Zitadelactionv1FlowType>) {
    self.result = Some(result);
  }

  pub fn with_result(mut self, result: Vec<models::Zitadelactionv1FlowType>) -> V1ListFlowTypesResponse {
    self.result = Some(result);
    self
  }

  pub fn result(&self) -> Option<&Vec<models::Zitadelactionv1FlowType>> {
    self.result.as_ref()
  }

  pub fn reset_result(&mut self) {
    self.result = None;
  }

}



