/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct Zitadelmanagementv1GetProviderByIdResponse {
	#[serde(rename = "idp")]
	idp: Option<models::V1Provider>,
}

impl Zitadelmanagementv1GetProviderByIdResponse {
	pub fn new() -> Zitadelmanagementv1GetProviderByIdResponse {
		Zitadelmanagementv1GetProviderByIdResponse { idp: None }
	}

	pub fn set_idp(&mut self, idp: models::V1Provider) {
		self.idp = Some(idp);
	}

	pub fn with_idp(
		mut self,
		idp: models::V1Provider,
	) -> Zitadelmanagementv1GetProviderByIdResponse {
		self.idp = Some(idp);
		self
	}

	pub fn idp(&self) -> Option<&models::V1Provider> {
		self.idp.as_ref()
	}

	pub fn reset_idp(&mut self) {
		self.idp = None;
	}
}
