/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct V1GetOidcInformationResponse {
	#[serde(rename = "issuer")]
	issuer: Option<String>,
	#[serde(rename = "discoveryEndpoint")]
	discovery_endpoint: Option<String>,
}

impl V1GetOidcInformationResponse {
	pub fn new() -> V1GetOidcInformationResponse {
		V1GetOidcInformationResponse { issuer: None, discovery_endpoint: None }
	}

	pub fn set_issuer(&mut self, issuer: String) {
		self.issuer = Some(issuer);
	}

	pub fn with_issuer(mut self, issuer: String) -> V1GetOidcInformationResponse {
		self.issuer = Some(issuer);
		self
	}

	pub fn issuer(&self) -> Option<&String> {
		self.issuer.as_ref()
	}

	pub fn reset_issuer(&mut self) {
		self.issuer = None;
	}

	pub fn set_discovery_endpoint(&mut self, discovery_endpoint: String) {
		self.discovery_endpoint = Some(discovery_endpoint);
	}

	pub fn with_discovery_endpoint(
		mut self,
		discovery_endpoint: String,
	) -> V1GetOidcInformationResponse {
		self.discovery_endpoint = Some(discovery_endpoint);
		self
	}

	pub fn discovery_endpoint(&self) -> Option<&String> {
		self.discovery_endpoint.as_ref()
	}

	pub fn reset_discovery_endpoint(&mut self) {
		self.discovery_endpoint = None;
	}
}
