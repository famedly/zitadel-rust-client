/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct V1BulkRemoveOrgMetadataRequest {
	#[serde(rename = "keys")]
	keys: Option<Vec<String>>,
}

impl V1BulkRemoveOrgMetadataRequest {
	pub fn new() -> V1BulkRemoveOrgMetadataRequest {
		V1BulkRemoveOrgMetadataRequest { keys: None }
	}

	pub fn set_keys(&mut self, keys: Vec<String>) {
		self.keys = Some(keys);
	}

	pub fn with_keys(mut self, keys: Vec<String>) -> V1BulkRemoveOrgMetadataRequest {
		self.keys = Some(keys);
		self
	}

	pub fn keys(&self) -> Option<&Vec<String>> {
		self.keys.as_ref()
	}

	pub fn reset_keys(&mut self) {
		self.keys = None;
	}
}
