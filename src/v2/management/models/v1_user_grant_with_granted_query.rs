/* 
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;
use crate::v2::management::models;
use serde::{Serialize, Deserialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct V1UserGrantWithGrantedQuery {
  #[serde(rename = "withGranted")]
  with_granted: Option<bool>
}

impl V1UserGrantWithGrantedQuery {
  pub fn new() -> V1UserGrantWithGrantedQuery {
    V1UserGrantWithGrantedQuery {
      with_granted: None
    }
  }

  pub fn set_with_granted(&mut self, with_granted: bool) {
    self.with_granted = Some(with_granted);
  }

  pub fn with_with_granted(mut self, with_granted: bool) -> V1UserGrantWithGrantedQuery {
    self.with_granted = Some(with_granted);
    self
  }

  pub fn with_granted(&self) -> Option<&bool> {
    self.with_granted.as_ref()
  }

  pub fn reset_with_granted(&mut self) {
    self.with_granted = None;
  }

}



