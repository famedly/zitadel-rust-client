/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct V1InUserEmailsQuery {
	/// the emails of the users to include
	#[serde(rename = "userEmails")]
	user_emails: Option<Vec<String>>,
}

impl V1InUserEmailsQuery {
	pub fn new() -> V1InUserEmailsQuery {
		V1InUserEmailsQuery { user_emails: None }
	}

	pub fn set_user_emails(&mut self, user_emails: Vec<String>) {
		self.user_emails = Some(user_emails);
	}

	pub fn with_user_emails(mut self, user_emails: Vec<String>) -> V1InUserEmailsQuery {
		self.user_emails = Some(user_emails);
		self
	}

	pub fn user_emails(&self) -> Option<&Vec<String>> {
		self.user_emails.as_ref()
	}

	pub fn reset_user_emails(&mut self) {
		self.user_emails = None;
	}
}
