/* 
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;
use crate::v2::management::models;
use serde::{Serialize, Deserialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct V1ManagementServiceMigrateGenericOidcProviderBody {
  #[serde(rename = "azure")]
  azure: Option<models::Zitadelmanagementv1AddAzureAdProviderRequest>,
  #[serde(rename = "google")]
  google: Option<models::Zitadelmanagementv1AddGoogleProviderRequest>
}

impl V1ManagementServiceMigrateGenericOidcProviderBody {
  pub fn new() -> V1ManagementServiceMigrateGenericOidcProviderBody {
    V1ManagementServiceMigrateGenericOidcProviderBody {
      azure: None,
      google: None
    }
  }

  pub fn set_azure(&mut self, azure: models::Zitadelmanagementv1AddAzureAdProviderRequest) {
    self.azure = Some(azure);
  }

  pub fn with_azure(mut self, azure: models::Zitadelmanagementv1AddAzureAdProviderRequest) -> V1ManagementServiceMigrateGenericOidcProviderBody {
    self.azure = Some(azure);
    self
  }

  pub fn azure(&self) -> Option<&models::Zitadelmanagementv1AddAzureAdProviderRequest> {
    self.azure.as_ref()
  }

  pub fn reset_azure(&mut self) {
    self.azure = None;
  }

  pub fn set_google(&mut self, google: models::Zitadelmanagementv1AddGoogleProviderRequest) {
    self.google = Some(google);
  }

  pub fn with_google(mut self, google: models::Zitadelmanagementv1AddGoogleProviderRequest) -> V1ManagementServiceMigrateGenericOidcProviderBody {
    self.google = Some(google);
    self
  }

  pub fn google(&self) -> Option<&models::Zitadelmanagementv1AddGoogleProviderRequest> {
    self.google.as_ref()
  }

  pub fn reset_google(&mut self) {
    self.google = None;
  }

}



