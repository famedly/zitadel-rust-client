/* 
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;
use crate::v2::management::models;
use serde::{Serialize, Deserialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct ManagementServiceUpdateProjectMemberBody {
  /// If no roles are provided the user won't have any rights
  #[serde(rename = "roles")]
  roles: Option<Vec<String>>
}

impl ManagementServiceUpdateProjectMemberBody {
  pub fn new() -> ManagementServiceUpdateProjectMemberBody {
    ManagementServiceUpdateProjectMemberBody {
      roles: None
    }
  }

  pub fn set_roles(&mut self, roles: Vec<String>) {
    self.roles = Some(roles);
  }

  pub fn with_roles(mut self, roles: Vec<String>) -> ManagementServiceUpdateProjectMemberBody {
    self.roles = Some(roles);
    self
  }

  pub fn roles(&self) -> Option<&Vec<String>> {
    self.roles.as_ref()
  }

  pub fn reset_roles(&mut self) {
    self.roles = None;
  }

}



