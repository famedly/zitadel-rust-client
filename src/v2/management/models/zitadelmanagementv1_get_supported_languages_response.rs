/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct Zitadelmanagementv1GetSupportedLanguagesResponse {
	#[serde(rename = "languages")]
	languages: Option<Vec<String>>,
}

impl Zitadelmanagementv1GetSupportedLanguagesResponse {
	pub fn new() -> Zitadelmanagementv1GetSupportedLanguagesResponse {
		Zitadelmanagementv1GetSupportedLanguagesResponse { languages: None }
	}

	pub fn set_languages(&mut self, languages: Vec<String>) {
		self.languages = Some(languages);
	}

	pub fn with_languages(
		mut self,
		languages: Vec<String>,
	) -> Zitadelmanagementv1GetSupportedLanguagesResponse {
		self.languages = Some(languages);
		self
	}

	pub fn languages(&self) -> Option<&Vec<String>> {
		self.languages.as_ref()
	}

	pub fn reset_languages(&mut self) {
		self.languages = None;
	}
}
