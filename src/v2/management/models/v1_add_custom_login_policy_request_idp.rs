/* 
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;
use crate::v2::management::models;
use serde::{Serialize, Deserialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct V1AddCustomLoginPolicyRequestIdp {
  #[serde(rename = "idpId")]
  idp_id: Option<String>,
  #[serde(rename = "ownerType")]
  owner_type: Option<models::V1IdpOwnerType>
}

impl V1AddCustomLoginPolicyRequestIdp {
  pub fn new() -> V1AddCustomLoginPolicyRequestIdp {
    V1AddCustomLoginPolicyRequestIdp {
      idp_id: None,
      owner_type: None
    }
  }

  pub fn set_idp_id(&mut self, idp_id: String) {
    self.idp_id = Some(idp_id);
  }

  pub fn with_idp_id(mut self, idp_id: String) -> V1AddCustomLoginPolicyRequestIdp {
    self.idp_id = Some(idp_id);
    self
  }

  pub fn idp_id(&self) -> Option<&String> {
    self.idp_id.as_ref()
  }

  pub fn reset_idp_id(&mut self) {
    self.idp_id = None;
  }

  pub fn set_owner_type(&mut self, owner_type: models::V1IdpOwnerType) {
    self.owner_type = Some(owner_type);
  }

  pub fn with_owner_type(mut self, owner_type: models::V1IdpOwnerType) -> V1AddCustomLoginPolicyRequestIdp {
    self.owner_type = Some(owner_type);
    self
  }

  pub fn owner_type(&self) -> Option<&models::V1IdpOwnerType> {
    self.owner_type.as_ref()
  }

  pub fn reset_owner_type(&mut self) {
    self.owner_type = None;
  }

}



