/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct V1GetGrantedProjectByIdResponse {
	#[serde(rename = "grantedProject")]
	granted_project: Option<models::V1GrantedProject>,
}

impl V1GetGrantedProjectByIdResponse {
	pub fn new() -> V1GetGrantedProjectByIdResponse {
		V1GetGrantedProjectByIdResponse { granted_project: None }
	}

	pub fn set_granted_project(&mut self, granted_project: models::V1GrantedProject) {
		self.granted_project = Some(granted_project);
	}

	pub fn with_granted_project(
		mut self,
		granted_project: models::V1GrantedProject,
	) -> V1GetGrantedProjectByIdResponse {
		self.granted_project = Some(granted_project);
		self
	}

	pub fn granted_project(&self) -> Option<&models::V1GrantedProject> {
		self.granted_project.as_ref()
	}

	pub fn reset_granted_project(&mut self) {
		self.granted_project = None;
	}
}
