/* 
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V1ImportHumanUserRequestHashedPassword : Use this to import hashed passwords from another system.

#[allow(unused_imports)]
use serde_json::Value;
use crate::v2::management::models;
use serde::{Serialize, Deserialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct V1ImportHumanUserRequestHashedPassword {
  /// Encoded hash of a password in Modular Crypt Format: https://zitadel.com/docs/concepts/architecture/secrets#hashed-secrets
  #[serde(rename = "value")]
  value: Option<String>
}

impl V1ImportHumanUserRequestHashedPassword {
  /// Use this to import hashed passwords from another system.
  pub fn new() -> V1ImportHumanUserRequestHashedPassword {
    V1ImportHumanUserRequestHashedPassword {
      value: None
    }
  }

  pub fn set_value(&mut self, value: String) {
    self.value = Some(value);
  }

  pub fn with_value(mut self, value: String) -> V1ImportHumanUserRequestHashedPassword {
    self.value = Some(value);
    self
  }

  pub fn value(&self) -> Option<&String> {
    self.value.as_ref()
  }

  pub fn reset_value(&mut self) {
    self.value = None;
  }

}



