/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct V1GetDefaultPasswordComplexityPolicyResponse {
	#[serde(rename = "policy")]
	policy: Option<models::V1PasswordComplexityPolicy>,
}

impl V1GetDefaultPasswordComplexityPolicyResponse {
	pub fn new() -> V1GetDefaultPasswordComplexityPolicyResponse {
		V1GetDefaultPasswordComplexityPolicyResponse { policy: None }
	}

	pub fn set_policy(&mut self, policy: models::V1PasswordComplexityPolicy) {
		self.policy = Some(policy);
	}

	pub fn with_policy(
		mut self,
		policy: models::V1PasswordComplexityPolicy,
	) -> V1GetDefaultPasswordComplexityPolicyResponse {
		self.policy = Some(policy);
		self
	}

	pub fn policy(&self) -> Option<&models::V1PasswordComplexityPolicy> {
		self.policy.as_ref()
	}

	pub fn reset_policy(&mut self) {
		self.policy = None;
	}
}
