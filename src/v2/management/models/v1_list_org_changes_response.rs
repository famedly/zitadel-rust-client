/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct V1ListOrgChangesResponse {
	#[serde(rename = "result")]
	result: Option<Vec<models::V1Change>>,
}

impl V1ListOrgChangesResponse {
	pub fn new() -> V1ListOrgChangesResponse {
		V1ListOrgChangesResponse { result: None }
	}

	pub fn set_result(&mut self, result: Vec<models::V1Change>) {
		self.result = Some(result);
	}

	pub fn with_result(mut self, result: Vec<models::V1Change>) -> V1ListOrgChangesResponse {
		self.result = Some(result);
		self
	}

	pub fn result(&self) -> Option<&Vec<models::V1Change>> {
		self.result.as_ref()
	}

	pub fn reset_result(&mut self) {
		self.result = None;
	}
}
