/* 
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;
use crate::v2::management::models;
use serde::{Serialize, Deserialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct V1UserGrantUserTypeQuery {
  /// type of user
  #[serde(rename = "type")]
  _type: Option<models::Userv1Type>
}

impl V1UserGrantUserTypeQuery {
  pub fn new() -> V1UserGrantUserTypeQuery {
    V1UserGrantUserTypeQuery {
      _type: None
    }
  }

  pub fn set__type(&mut self, _type: models::Userv1Type) {
    self._type = Some(_type);
  }

  pub fn with__type(mut self, _type: models::Userv1Type) -> V1UserGrantUserTypeQuery {
    self._type = Some(_type);
    self
  }

  pub fn _type(&self) -> Option<&models::Userv1Type> {
    self._type.as_ref()
  }

  pub fn reset__type(&mut self) {
    self._type = None;
  }

}



