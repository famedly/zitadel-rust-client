// SPDX-FileCopyrightText: 2025 Famedly GmbH (info@famedly.com)
//
// SPDX-License-Identifier: Apache-2.0

/*
 * Management API
 *
 * The management API is as the name states the interface where systems can
 * mutate IAM objects like organizations, projects, clients, users and so on
 * if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::v2::management::models;

#[derive(Clone, Debug, Serialize, Deserialize)]
pub struct V1IdpOwnerTypeQuery {
	/// search for custom or global identity providers
	#[serde(rename = "ownerType")]
	owner_type: Option<models::V1IdpOwnerType>,
}

impl V1IdpOwnerTypeQuery {
	pub fn new() -> V1IdpOwnerTypeQuery {
		V1IdpOwnerTypeQuery { owner_type: None }
	}

	pub fn set_owner_type(&mut self, owner_type: models::V1IdpOwnerType) {
		self.owner_type = Some(owner_type);
	}

	pub fn with_owner_type(mut self, owner_type: models::V1IdpOwnerType) -> V1IdpOwnerTypeQuery {
		self.owner_type = Some(owner_type);
		self
	}

	pub fn owner_type(&self) -> Option<&models::V1IdpOwnerType> {
		self.owner_type.as_ref()
	}

	pub fn reset_owner_type(&mut self) {
		self.owner_type = None;
	}
}
