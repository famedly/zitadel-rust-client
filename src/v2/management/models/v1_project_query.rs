/* 
 * Management API
 *
 * The management API is as the name states the interface where systems can mutate IAM objects like organizations, projects, clients, users and so on if they have the necessary access rights.
 *
 * OpenAPI spec version: 1.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;
use crate::v2::management::models;
use serde::{Serialize, Deserialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct V1ProjectQuery {
  #[serde(rename = "nameQuery")]
  name_query: Option<models::V1ProjectNameQuery>,
  #[serde(rename = "projectResourceOwnerQuery")]
  project_resource_owner_query: Option<models::V1ProjectResourceOwnerQuery>
}

impl V1ProjectQuery {
  pub fn new() -> V1ProjectQuery {
    V1ProjectQuery {
      name_query: None,
      project_resource_owner_query: None
    }
  }

  pub fn set_name_query(&mut self, name_query: models::V1ProjectNameQuery) {
    self.name_query = Some(name_query);
  }

  pub fn with_name_query(mut self, name_query: models::V1ProjectNameQuery) -> V1ProjectQuery {
    self.name_query = Some(name_query);
    self
  }

  pub fn name_query(&self) -> Option<&models::V1ProjectNameQuery> {
    self.name_query.as_ref()
  }

  pub fn reset_name_query(&mut self) {
    self.name_query = None;
  }

  pub fn set_project_resource_owner_query(&mut self, project_resource_owner_query: models::V1ProjectResourceOwnerQuery) {
    self.project_resource_owner_query = Some(project_resource_owner_query);
  }

  pub fn with_project_resource_owner_query(mut self, project_resource_owner_query: models::V1ProjectResourceOwnerQuery) -> V1ProjectQuery {
    self.project_resource_owner_query = Some(project_resource_owner_query);
    self
  }

  pub fn project_resource_owner_query(&self) -> Option<&models::V1ProjectResourceOwnerQuery> {
    self.project_resource_owner_query.as_ref()
  }

  pub fn reset_project_resource_owner_query(&mut self) {
    self.project_resource_owner_query = None;
  }

}



