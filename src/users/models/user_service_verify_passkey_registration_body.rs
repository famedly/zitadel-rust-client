/*
 * User Service
 *
 * This API is intended to manage users in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::users::models;

#[derive(Debug, Serialize, Deserialize)]
pub struct UserServiceVerifyPasskeyRegistrationBody {
	/// PublicKeyCredential Interface. Generated helper methods populate the field from JSON created by a WebauthN client. See also:  https://www.w3.org/TR/webauthn/#publickeycredential
	#[serde(rename = "publicKeyCredential")]
	public_key_credential: Value,
	#[serde(rename = "passkeyName")]
	passkey_name: String,
}

impl UserServiceVerifyPasskeyRegistrationBody {
	pub fn new(
		public_key_credential: Value,
		passkey_name: String,
	) -> UserServiceVerifyPasskeyRegistrationBody {
		UserServiceVerifyPasskeyRegistrationBody {
			public_key_credential: public_key_credential,
			passkey_name: passkey_name,
		}
	}

	pub fn set_public_key_credential(&mut self, public_key_credential: Value) {
		self.public_key_credential = public_key_credential;
	}

	pub fn with_public_key_credential(
		mut self,
		public_key_credential: Value,
	) -> UserServiceVerifyPasskeyRegistrationBody {
		self.public_key_credential = public_key_credential;
		self
	}

	pub fn public_key_credential(&self) -> &Value {
		&self.public_key_credential
	}

	pub fn set_passkey_name(&mut self, passkey_name: String) {
		self.passkey_name = passkey_name;
	}

	pub fn with_passkey_name(
		mut self,
		passkey_name: String,
	) -> UserServiceVerifyPasskeyRegistrationBody {
		self.passkey_name = passkey_name;
		self
	}

	pub fn passkey_name(&self) -> &String {
		&self.passkey_name
	}
}
