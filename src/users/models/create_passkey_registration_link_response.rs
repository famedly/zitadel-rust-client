/*
 * User Service
 *
 * This API is intended to manage users in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};

use crate::users::models;

#[derive(Debug, Serialize, Deserialize, Default)]
pub struct CreatePasskeyRegistrationLinkResponse {
	#[serde(rename = "details")]
	details: Option<models::Details>,
	/// \"one time code generated by ZITADEL; required to start the passkey
	/// registration without user authentication\"
	#[serde(rename = "code")]
	code: Option<models::PasskeyRegistrationCode>,
}

impl CreatePasskeyRegistrationLinkResponse {
	pub fn new() -> CreatePasskeyRegistrationLinkResponse {
		CreatePasskeyRegistrationLinkResponse { details: None, code: None }
	}

	pub fn set_details(&mut self, details: models::Details) {
		self.details = Some(details);
	}

	pub fn with_details(
		mut self,
		details: models::Details,
	) -> CreatePasskeyRegistrationLinkResponse {
		self.details = Some(details);
		self
	}

	pub fn details(&self) -> Option<&models::Details> {
		self.details.as_ref()
	}

	pub fn reset_details(&mut self) {
		self.details = None;
	}

	pub fn set_code(&mut self, code: models::PasskeyRegistrationCode) {
		self.code = Some(code);
	}

	pub fn with_code(
		mut self,
		code: models::PasskeyRegistrationCode,
	) -> CreatePasskeyRegistrationLinkResponse {
		self.code = Some(code);
		self
	}

	pub fn code(&self) -> Option<&models::PasskeyRegistrationCode> {
		self.code.as_ref()
	}

	pub fn reset_code(&mut self) {
		self.code = None;
	}
}
