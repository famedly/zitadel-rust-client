/*
 * User Service
 *
 * This API is intended to manage users in a ZITADEL instance.
 *
 * OpenAPI spec version: 2.0
 * Contact: hi@zitadel.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

use serde::{Deserialize, Serialize};
#[allow(unused_imports)]
use serde_json::Value;

use crate::users::models;

#[derive(Debug, Serialize, Deserialize)]
pub struct IdpoAuthAccessInformation {
	#[serde(rename = "accessToken")]
	access_token: Option<String>,
	#[serde(rename = "idToken")]
	id_token: Option<String>,
}

impl IdpoAuthAccessInformation {
	pub fn new() -> IdpoAuthAccessInformation {
		IdpoAuthAccessInformation { access_token: None, id_token: None }
	}

	pub fn set_access_token(&mut self, access_token: String) {
		self.access_token = Some(access_token);
	}

	pub fn with_access_token(mut self, access_token: String) -> IdpoAuthAccessInformation {
		self.access_token = Some(access_token);
		self
	}

	pub fn access_token(&self) -> Option<&String> {
		self.access_token.as_ref()
	}

	pub fn reset_access_token(&mut self) {
		self.access_token = None;
	}

	pub fn set_id_token(&mut self, id_token: String) {
		self.id_token = Some(id_token);
	}

	pub fn with_id_token(mut self, id_token: String) -> IdpoAuthAccessInformation {
		self.id_token = Some(id_token);
		self
	}

	pub fn id_token(&self) -> Option<&String> {
		self.id_token.as_ref()
	}

	pub fn reset_id_token(&mut self) {
		self.id_token = None;
	}
}
